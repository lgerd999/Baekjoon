# https://www.acmicpc.net/problem/8980
# 택배 - 그리디

# N,C = map(int,input().split())                
# M = int(input())
# data = [list(map(int,input().split())) for _ in range(M)]
# print(data)
N,C = 4,40
M = 6
data = [[3, 4, 20], [1, 2, 10], [1, 3, 20], [1, 4, 30], [2, 3, 10], [2, 4, 20]]

data.sort(key=lambda x:(x[1],x[0]))
#print(data)

'''
* 문제 해결 
- 우선, 순차적으로 배송하기 위해 일차적으로 정렬을 진행
- 택배 차량이 배송할 수 있는 용량을 관리하는 변수 dist 와 박스를 보내는 각 마을 번호 관리할 수 있는 cnt 정의

정렬 후 데이터 : [[1, 2, 10], [1, 3, 20], [2, 3, 10], [1, 4, 30], [2, 4, 20], [3, 4, 20]]
(박스를 보내는 마을,박스를 받는 마을, 보내는 박스 개수)

    O------O------O------O------O           마을 1,2,3만 물건을 실을 수 있음
  본부   마을1  마을2   마을3   마을4

cnt         1         2       3           출하 
1,2,10    40-10     40      40          10(1->2)    1번 마을에서 박스 10개를 차량에 실고 2번 마을에서 하차해야 하기 때문에 cnt 1번에서 -10
1,3,20    30-20     40-20   40          20(1->3)    1번 마을에서 3번 마을까지 가야 하기 때문에 1번과 2번에 각 20개를 빼줘야 함
2,3,10    10        20-10   40          10(2->3)    2번 마을에서 3번 마을까지 가는 경로이기 때문에 cnt 2에서 10을 빼줌
1,4,30    10-10(30) 10-10   40-10       10(1->4)    1번마을에서 4번마을까지 가야하기 때문에 모두 30만큼 빼줘야 하지만, 현재 실을 수 있는 용량이 10만큼만 있어 이만큼만 전체로 빼줌
2,4,20    0         0       30           0          2번 마을에서 4번마을까지 가는데 20만큼 빼줘야 하지만 탑재 용량이 다 차서 실을 수 없음
3,4,20    0         0       30-20       20(3->4)    3번 마을에서 4번마을까지 가는 경우이므로 cnt 3에서 20만큼 빼줌

전체적으로 출하 부분을 더하면 70이 된다.

'''
dist = [0]+[C]*(N-1) # dist[0] = 0, dist[1:] = C(최대 용량)로 셋팅

sum = 0
for s,e,w in data:    # 보내는 마을 번호 s, 받는 마을 번호 e, 보내는 박스 수 w
    cnt = e - 1     # 순차적으로 방문하기 때문에 받는 마을 전까지 트럭의 탑재 용량을 카운트하기 위한 인덱스
    if min(dist[s:e]) < w:  # 보내는 마을과 받는 마을 구간 사이 트럭에 각 마을별 남은 택배 박스 수 중 최소값 구해서 현재 보낼 택배 박스 수와 비교하여 그 수만큼만 트럭에 탑재
        w = min(dist[s:e])
    while cnt >= s :        # 보내는 마을(s)과 받는 마을(e) 구간에서 트럭에 남은 택배 박스 수만큼 차감
        if dist[cnt] > 0:            
            dist[cnt] -= w                     
        else:
            dist[cnt] = 0
        cnt -= 1    
    sum += w        # 각 마을 별 전달된 박스 총합
    
print(sum)
