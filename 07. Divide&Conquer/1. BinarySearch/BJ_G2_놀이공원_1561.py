# https://www.acmicpc.net/problem/1561
#
'''
N명의 아이들이 한 줄로 서 있고, M종류의 1인승 놀이기구가 있는데 1~M까지 번호가 매겨져 있음.

조건1. 모든 놀이기구는 운행시간이 정해져 있고 운행 시간이 지나면 탑승하고 있던 아이는 내린다.
조건2. 놀이기구가 비면 현재 줄에서 가장 앞에 서 있는 아이가 빈 놀이기구에 탑승.
조건3. 여러개의 놀이기구가 동시에 비면, 더 작은 번호가 적혀 있는 놀이기구에 먼저 탑승.

놀이기구가 모두 비어 있는 상태에서 첫 번째 아이가 놀이기구에 탑승한다고 할 때, 줄의 마지막 아이가 타게 되는 놀이기구 번호를 구하는 문제

예) N =3(아이들 수), M = 5(놀이기구 수)
7 8 9 7 8 (놀이기구의 운행시간,단위 분)
-----------
--> 3번째 아이가 3번째 놀이기구에 탑승.

22 5
1 2 3 4 5
-----------(답:4)
--> 22번째 아이가 타게 될 놀이기구 번호
--> 한 타임에 비어 있는 놀이기구에 탑승으로 이해.
예)  1  2  3  4  5   mid = 15//5 = 3 
0분 : 1  2  3  4  5         0분 : 1  1  1  1  1  : 1,2,3,4,5
1분 : 6  2  3  4  5         1분 : 1  0  0  0  0  : 1
2분 : 7  8  3  4  5         2분 : 1  1  0  0  0  : 1,2   
3분 : 9  8 10  4  5         3분 : 1  0  1  0  0  : 1,3
4분 :11 12 10 13  5         4분 : 1  1  0  1  0  : 1,2,4
5분 :14 12 10 13 15         5분 : 1  0  0  0  1  : 1,4
6분 :16 17 18 13 15         6분 : 1  1  1  0  0  : 1,2,3
7분 :19 17 18 13 15         7분 : 1  0  0  0  0  : 1
8분 :20 21 18 22 15         8분 : 1  1  0  1  0  : 1,2,4
----------------------

24 5
     1  2  2  4  4   mid = 13//5 = 2 
0    1  2  3  4  5      1 1 1 1 1 : 1,2,3,4,5
1    6  2  3  4  5      1 0 0 0 0 : 1
2    7  8  9  4  5      1 1 1 0 0 : 1,2,3
3    10 8  9  4  5      1 0 0 0 0 : 1 
4    11 12 13 14 15     1 1 1 1 1 : 1,2,3,4,5
5    16 12 13 14 15     1 0 0 0 0 : 1
6    17 18 19 14 15     1 1 1 0 0 : 1,2,3
7    20 18 19 14 15     1 0 0 0 0 : 1
8    21 22 23 24 25     1 1 1 1 1 : 1,2,3,4,5
------------(답:4)

구현
1. 핵심은 분 단위로 체크해서 운행시간이 임박한 놀이기구를 찾는 것
   - 각 횟차(1분당) 당 놀이기구를 탄 총 사람수는 t분/놀이기구 운행시간. 예) 2/(1,2,2,4,4) = (2,1,1,0,0)
2. 찾았으면 줄을 고려해서 가장 앞에서 선 아이부터 탑승시킴. 

'''
import sys
input = sys.stdin.readline

# t 시간까지 놀이기구를 탄 사람의 수 구하기
# t = 0일때는 모든 놀이기구에 타기때문에 제외하면 t = 1 ~ 2까지의 놀이기구를 탄 사람의 수를 구할 수 있다.
def num_play(t,arr):
    num = 0
    for i in arr:
        num += t//i
    # print(num)    
    return num    

N,M = map(int,input().split())
PE = list(map(int,input().split()))

# t 시간
start = 1
end = max(PE)*N 
ans,cnt = 0,0
while start <= end:
    mid = (start+end)//2
    total = num_play(mid,PE)

    if total >= N - M:  # t = 0일 때 제외. 놀이기구 수만큼 사람 수를 뺀다.
        ans = mid       # 적절한 t를 구하기
        cnt = total     # t 일때 누적된 탑승객 수.
        end = mid - 1        
    else:
        start = mid + 1    
# print(ans,cnt)

'''
22 5
1 2 3 4 5
--> ans = 8, 이때 사람수는 17 
--> k = 22 - 5 - 14(k=7일때, 19까지 탑승함)

'''
k = N - M - num_play(ans-1,PE)  # 전체 대기 줄 에서 t = 0일때 인원 제외하고 이분탐색으로 구한 ans값일때 사람 수

pl = []
for i,j in enumerate(PE):
    if ans % j == 0:
        pl.append(i)
# print(pl)        
if N <= M:        
    print(N)    
else:
    print(pl[k-1]+1)