# https://www.acmicpc.net/problem/2293

N,K = map(int,input().split())
data = [int(input()) for _ in range(N)]
#print(data)
'''
제약 사항 : 메모리 4MB이므로 이차원 DP로는 메모리 초과.
n가지 종류의 동전이 있고, 그 가치의 합이 k원이 되도록 하는 경우의 수(동전은 몇 개라도 사용 가능, 순서만 다른 것은 같은 경우로 함)

3 10(n,k) - 3가지 종류의 동전이 있고, 합이 10인 경우의 수
1원 2원 5원
     K  =  0  1  2  3  4  5  6  7  8  9  10
coin(1) = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 1원 동전으로 10을 만드는 경우의 수는 자기 자신 하나만 해당됨
coin(2) = [1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6]
coin(5) = [1, 1, 2, 2, 3, 4, 5, 6, 7, 8, 10]

점화식 : DP[K] = DP[K] + DP[K - coin(N)], DP[0] = 1, K > coin[N]
(추측) K = 0, 동전의 합이 0인 경우도 하나의 경우의 수로 카운트하는 것으로 추측됨.
(추측) K = 1, 동전의 합이 1인 경우, 1원 1개, 2원 0개, 5원 0개로 각 경우의 수는 각 1개로 카운트

'''
DP = [0]*(K+1)
DP[0] = 1

for i in data:      # 동전 종류(1,2,5)
    for j in range(1,K+1): # 동전의 합 K까지 나열
        if j >= i : 
            DP[j] += DP[j-i]
print(DP[K])            
