# https://www.acmicpc.net/problem/1149
# 
'''
RGB 거리에 집이 N개 있고 순서대로 나열되어 있고, 빨강/초록/파랑 색으로 집을 색칠하는 비용이 주어졌을 때 최소 비용 구하기.
*조건 
1. 1번 집의 색은 2번 집의 색과 같지 않아야 한다.
2. N번 집의 색은 N-1번 집의 색과 같지 않아야 한다.
3. i(2 ≤ i ≤ N-1)번 집의 색은 i-1번, i+1번 집의 색과 같지 않아야 한다.

* 아이디어
3x3 ( N = 3)
1번집 (0,0) (0,1) (0,2)  : dp
2번집 (1,0) (1,1) (1,2)  : 
 --> (1,0) : min((0,1),(0,2)) + (1,0)
 --> (1,1) : min((0,0),(0,2)) + (1,1)
 --> (1,2) : min((0,0),(0,1)) + (1,2)
3번집 (2,0) (2,1) (2,2)
--> (2,0) : min((1,1),(1,2)) + (2,0)
--> (2,1) : min((1,0),(1,2)) + (2,1)
--> (2,2) : min((1,0),(1,1)) + (2,2)

...

N번집 (N,0) (N,1) (N,2)
--> (N,0) : min((N-1,1),(N-1,2)) + (N-1,0)
--> (N,1) : min((N-1,0),(N-1,2)) + (N-1,1)
--> (N,2) : min((N-1,0),(N-1,1)) + (N-1,2)

점화식 : 
dp[N-1][0] = min(dp[N-1][1],dp[N-1][2]) + data[N-1][0]
dp[N-1][1] = min(dp[N-1][0],dp[N-1][2]) + data[N-1][1]
dp[N-1][2] = min(dp[N-1][0],dp[N-1][1]) + data[N-1][2]

'''
import sys
input = sys.stdin.readline

N = int(input())
data = [list(map(int,input().split())) for _ in range(N)]
dp = [[0]*3 for _ in range(N)]
dp[0] = data[0]
for i in range(1,N):
    dp[i][0] = min(dp[i-1][1],dp[i-1][2]) + data[i][0]
    dp[i][1] = min(dp[i-1][0],dp[i-1][2]) + data[i][1]
    dp[i][2] = min(dp[i-1][0],dp[i-1][1]) + data[i][2]
# print(dp)
print(min(dp[N-1]))    
    
      
    