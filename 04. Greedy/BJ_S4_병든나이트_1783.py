# https://www.acmicpc.net/problem/1783
# 
'''
조건1. 병든 나이트는 아래 4가지로만 움직일 수 있다.
-이동1- 2칸 위로, 1칸 오른쪽
-이동2- 1칸 위로, 2칸 오른쪽
-이동3- 1칸 아래로, 2칸 오른쪽
-이동4- 2칸 아래로, 1칸 오른쪽
조건2. 체스판의 가장 왼쪽 아래에 위치
조건3. 이동 횟수가 4번보다 적지 않다면, 이동 방법을 모두 한번씩 사용해야 한다.
조건4. 이동 횟수가 4번보다 적은 경우, 이동 방법에 대한 제약이 없다.

방문한 칸의 수를 최대로 하려고 한다.

구현
이동 횟수가 4번 미만일 경우,
1. 세로(N)가 1인 경우, 움직이지 못하므로 1칸(예제2)
    | | |O| | |
2. 세로가 2인 경우, 이동3과 이동4 조건을 최대 3번까지 이용 가능(4번 이상 이동시 4가지 이동 방법을 모두 사용해야 하기 때문)
   예) 2x5   ==> (5+1)/2 = 3  : min(M+1/2, 4)
    | | |O| | |
    |O| | | |O|
3. 세로가 3인 경우, 
     - 가로가 6이하이면 'ㅎ'에서 이동1과 이동4, 그리고 '오'에서 이동2 혹은 이동3을 이용해서 최대 4칸
     3x5  ==> 5 ==> min(M,4)
     | |오| |오| |
     | | | | | |
     |O| |ㅎ| |O|     
     - 가로가 7이상이면, 이동2와 이동3을 한번씩 사용하고 나머지는 이동1과 이동4
     7x7 ==> 7     
     | | | | | | | |
     | | | | | | | |
     | | | | | | | |
     | | | |O| | | |
     | | | | | | | |
     | | |O| |O| | |
     |O| | | | | |O|
     N이 8부터는 M-7 + 5
     
'''

import sys
input = sys.stdin.readline

N,M = map(int,input().split())
if N == 1:
    cnt = 1
elif N ==2:
    # cnt = min(4,(M-1)//2+1)    
    cnt = min(4,(M+1)//2)    
elif M < 7:
    cnt = min(4,M)
else:
    # cnt = (2 + (M-5)) + 1    
    cnt = M -7 + 5

print(cnt)